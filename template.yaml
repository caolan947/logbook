AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  logbook-app

  Sample SAM Template for logbook-app

Parameters:
  ACCOUNTQUEUE:
    Type: String
    Default: logbook-account-queue-sqs.fifo
  DEFAULTMSGGROUP:
    Type: String
    Default: msg_group

Globals:
  Function:
    Timeout: 30
    Handler: app.lambda_handler
    Runtime: python3.11
    Architectures:
      - x86_64
    Environment:
      Variables:
        region: eu-west-1
        queue_default_group: !Ref DEFAULTMSGGROUP
        account_queue: !Ref ACCOUNTQUEUE
        account_user_pool_client: !Ref AccountUserPoolClient

Resources:
  AccountUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: logbook-account-upl
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false

  AccountUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref AccountUserPool
      ClientName: logbook-account-upc
      GenerateSecret: false

  AccountHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: logbook-account-handler-lfn
      CodeUri: account_handler/
      Handler: app.lambda_handler
      Events:
        Account:
          Type: Api
          Properties:
            Path: /account
            Method: post

  AccountSaveFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: logbook-account-save-lfn
      CodeUri: account_save/
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt AccountQueue.Arn

  AccountQueue:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: True
      FifoQueue: True
      QueueName: !Ref ACCOUNTQUEUE

  GenericLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: logbook-generic-lambda-iamp
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
          - Action: [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
            ]
          - Resource: "*"
      Roles:
        - !Ref AccountIAMRole

  AccountIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: logbook-account-sqs-iamp
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
          - Action: 
            - "sqs:SendMessage"
            - "cognito-idp:SignUp"
          - Resource:
            - "arn:aws:sqs:eu-west-1:376949755107:logbook-account-queue-sqs.fifo"
            - "arn:aws:cognito-idp:eu-west-1:376949755107:*"
      Roles:
        - !Ref AccountIAMRole

  AccountIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole