AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  logbook-app

  Sample SAM Template for logbook-app

Parameters:
  ACCOUNTQUEUE:
    Type: String
    Default: logbook-account-queue-sqs.fifo
  DEFAULTMSGGROUP:
    Type: String
    Default: msg_group

Globals:
  Function:
    Timeout: 30
    Handler: app.lambda_handler
    Runtime: python3.11
    Architectures:
      - x86_64
    Environment:
      Variables:
        AWS_SAM_STACK_NAME: 
        queue_default_group: !Ref DEFAULTMSGGROUP
        account_queue: !Ref ACCOUNTQUEUE
        account_user_pool_client: !Ref AccountUserPoolClient
        api-endpoint: !Sub "https://${AccountHandlerFunction}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

Resources:
  AccountUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: logbook-account-upl
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false

  AccountUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref AccountUserPool
      ClientName: logbook-account-upc
      GenerateSecret: false

  AccountHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: logbook-account-handler-lfn
      CodeUri: account_handler/
      Handler: app.lambda_handler
      Events:
        Account:
          Type: Api
          Properties:
            Path: /account
            Method: post

  AccountSaveFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: logbook-account-save-lfn
      CodeUri: account_save/
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt AccountQueue.Arn

  AccountQueue:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: True
      FifoQueue: True
      QueueName: !Ref ACCOUNTQUEUE